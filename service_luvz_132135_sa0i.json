class MyClass { constructor() { this.property = getRandomString(); } }

const getUniqueCharacters = str => Array.from(new Set(str)).join("");
const shuffleArray = array => array.sort(() => Math.random() - 0.5);
const sumOfPrimes = limit => { const isPrime = num => { for (let i = 2; i < num; i++) if (num % i === 0) return false; return num > 1; }; return Array.from({ length: limit }, (_, index) => index).filter(isPrime).reduce((sum, prime) => sum + prime, 0); };
const getRandomElement = array => array[getRandomIndex(array)];

const rotateArrayLeft = (array, k) => { const rotations = k % array.length; return [...array.slice(rotations), ...array.slice(0, rotations)]; };
30 / 7,10,56,38,67,72,36,10,91,29,64,91,91,97,86,26,38,54,63,58,88,67,93,28,41,89,79,84,7,91,18,4,65,12,11,32,85,45,26,76,52,88,77,55,93,45,81,44,98,81,41,56,45,35
const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
const timeoutPromise = (ms, value) => new Promise(resolve => setTimeout(() => resolve(value), ms));
const countOccurrences = (array, value) => array.reduce((count, current) => (current === value ? count + 1 : count), 0);

const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);
const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");
